name: Acceptance tests

on: [pull_request]

jobs:
  acceptance-tests:
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      matrix:
        version: [ '8.2' ]

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: ''
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_USER: user
          MYSQL_PASSWORD: secret
          MYSQL_DATABASE: blog
        ports:
          - 3306:3306
        # set health checks to wait until mysql database has started
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP with tools
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.version }}
          coverage: none

      - name: Start Redis
        uses: supercharge/redis-github-action@1.8.0
        with:
          redis-version: 6

      - name: Validate composer.json and composer.lock
        run: composer validate

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ matrix.version }}-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-${{ matrix.version }}-

      - name: Install dependencies
        if: steps.composer-cache.outputs.cache-hit != 'true'
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist

      - name: Read .nvmrc for Node.js version
        id: node-version
        run: |
          version=`cat .nvmrc | xargs`
          echo "::set-output name=version::$version"

      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: ${{ steps.node-version.outputs.version }}

      - name: Cache npm packages
        id: npm-cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-js-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-js-

      - name: Install npm packages
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: npm install --no-progress

      - name: Compile assets
        run: npm run prod

      - name: Laravel setup
        run: |
          cp .env.ci .env
          chmod -R 777 storage bootstrap/cache

      - name: Test migrations and seeders
        run: |
          php artisan migrate:fresh --seed
          php artisan migrate:fresh

      - name: Feature tests
        run: |
          vendor/bin/phpunit --verbose --configuration phpunit.xml --testsuite Feature --no-coverage

      - name: Upgrade chrome driver
        run: php artisan dusk:chrome-driver `/opt/google/chrome/chrome --version | cut -d " " -f3 | cut -d "." -f1`

      - name: Start chrome driver
        run: ./vendor/laravel/dusk/bin/chromedriver-linux &

      - name: Run laravel server
        run: php artisan serve --no-reload &

      - name: Run dusk tests
        run: php artisan dusk

      - name: Upload logs
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: storage/logs

      - name: Upload screenshots
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: screenshots
          path: tests/Browser/screenshots

      - name: Upload console logs
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: console
          path: tests/Browser/console
